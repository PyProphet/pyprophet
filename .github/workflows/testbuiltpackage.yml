name: Test Build

on:
  workflow_dispatch:  # Manual trigger
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-build:
    name: Test build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
      fail-fast: false  # Continue testing other platforms even if one fails

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Build executable (Linux)
        if: runner.os == 'Linux'
        run: bash scripts/build/build_linux.sh

      - name: Build executable (Windows)
        if: runner.os == 'Windows'
        run: scripts/build/build_windows.bat

      - name: Build executable (macOS)
        if: runner.os == 'macOS'
        run: bash scripts/build/build_macos.sh

      - name: Test basic commands (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "Testing --help and --version..."
          dist/pyprophet/pyprophet --help
          dist/pyprophet/pyprophet --version

      - name: Test basic commands (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Testing --help and --version..."
          dist\pyprophet\pyprophet.exe --help
          dist\pyprophet\pyprophet.exe --version

      - name: Test score commands (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "Testing score at ms1ms2 level..."
          dist/pyprophet/pyprophet score --in tests/data/test_data.osw --level ms1ms2 --pi0_lambda 0 0 0
          
          echo "Testing score at transition level..."
          dist/pyprophet/pyprophet score --in tests/data/test_data.osw --level transition --pi0_lambda 0 0 0

      - name: Test score commands (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Testing score at ms1ms2 level..."
          dist\pyprophet\pyprophet.exe score --in tests/data/test_data.osw --level ms1ms2 --pi0_lambda 0 0 0
          
          echo "Testing score at transition level..."
          dist\pyprophet\pyprophet.exe score --in tests/data/test_data.osw --level transition --pi0_lambda 0 0 0

      - name: Test infer commands (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "Testing infer peptide..."
          dist/pyprophet/pyprophet infer peptide --in tests/data/test_data.osw --context global
          
          echo "Testing infer peptidoform..."
          dist/pyprophet/pyprophet infer peptidoform --in tests/data/test_data.osw --no-ipf_ms1_scoring

      - name: Test infer commands (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Testing infer peptide..."
          dist\pyprophet\pyprophet.exe infer peptide --in tests/data/test_data.osw --context global
          
          echo "Testing infer peptidoform..."
          dist\pyprophet\pyprophet.exe infer peptidoform --in tests/data/test_data.osw --no-ipf_ms1_scoring

      - name: Test export commands (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          echo "Testing export score-report..."
          dist/pyprophet/pyprophet export score-report --in tests/data/test_data.osw
          
          echo "Testing export tsv..."
          dist/pyprophet/pyprophet export tsv --in tests/data/test_data.osw --out test_data.tsv
          
          # Verify output file was created
          if [ ! -f test_data.tsv ]; then
            echo "ERROR: test_data.tsv was not created!"
            exit 1
          fi
          echo "Output file created successfully: test_data.tsv"

      - name: Test export commands (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Testing export score-report..."
          dist\pyprophet\pyprophet.exe export score-report --in tests/data/test_data.osw
          
          echo "Testing export tsv..."
          dist\pyprophet\pyprophet.exe export tsv --in tests/data/test_data.osw --out test_data.tsv
          
          # Verify output file was created
          if (-not (Test-Path test_data.tsv)) {
            Write-Error "ERROR: test_data.tsv was not created!"
            exit 1
          }
          Write-Output "Output file created successfully: test_data.tsv"
        shell: pwsh

      - name: Upload test outputs as artifacts
        if: always()  # Upload even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: test-outputs-${{ matrix.os }}
          path: |
            test_data.tsv
            tests/data/test_data.osw
          if-no-files-found: ignore
          retention-days: 3

      - name: Summary
        if: success()
        run: |
          echo "âœ… All tests passed on ${{ matrix.os }}!"